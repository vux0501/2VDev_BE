openapi: 3.0.3
info:
  title: 2VDEV - Q&A WEBSITE FOR DEVELOPERS (TypeScript)
  description: |-
    **This website is used for asking and answering questions about information technology.**

    You can ask and answer questions about information technology here, and your account can accumulate points to climb the rankings. This can help you develop knowledge, enhance your skills, and build a reputation in your career.

    **About website**


    My team: 
    - Front-end: Tran Nguyen Kha Vy
    - Back-end: Nguyen Hoang Vu

    Language: TypeScript


    Technology:
    - NodeJs
    - ExpressJs
    - MongoDB
    - AWS
    - Socket
    ...

  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:5000
tags:
  - name: users
    description: API liên quan đến user
paths:
  /users/login:
    post:
      tags:
        - users
      summary: Đăng nhập
      description: Đăng nhập vào website
      operationId: login
      requestBody:
        description: Thông tin đăng nhập
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '200':
          description: Đăng nhập thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng nhập thành công.
                  result:
                    $ref: '#/components/schemas/SuccessAuthentication'

        '422':
          description: Invalid input

  /users/register:
    post:
      tags:
        - users
      summary: Đăng ký
      description: Đăng ký tài khoản
      operationId: register
      requestBody:
        description: Thông tin đăng ký
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        '200':
          description: Đăng ký thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng ký thành công.
                  result:
                    $ref: '#/components/schemas/SuccessAuthentication'

        '422':
          description: Invalid input

  /users/verify-email:
    post:
      tags:
        - users
      summary: Xác thực email
      description: Xác thực email
      operationId: verify email
      security:
        - BearerAuth: []
      requestBody:
        description: Thông tin đăng ký
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailBody'
        required: true
      responses:
        '200':
          description: Đăng ký thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Xác thực email thành công.
                  result:
                    $ref: '#/components/schemas/SuccessAuthentication'

        '422':
          description: Invalid input

  /users/resend-verify-email:
    post:
      tags:
        - users
      summary: Gửi lại xác nhận email
      description: Gửi lại xác nhận email
      operationId: resend verify email
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Gửi lại email xác nhận thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Gửi lại email xác nhận thành công.

        '422':
          description: Invalid input

  /users/refresh_token:
    post:
      tags:
        - users
      summary: Làm mới token
      description: Làm mới access_token
      operationId: refresh token
      security:
        - BearerAuth: []
      requestBody:
        description: Access token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenBody'
        required: true
      responses:
        '200':
          description: Làm mới access_token thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Làm mới access_token thành công.
                  result:
                    $ref: '#/components/schemas/SuccessAuthentication'

        '422':
          description: Invalid input

  /users/logout:
    post:
      tags:
        - users
      summary: Đăng xuất
      description: Đăng xuất
      operationId: logout
      security:
        - BearerAuth: []
      requestBody:
        description: Đăng xuất khỏi hệ thống
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutBody'
        required: true
      responses:
        '200':
          description: Đăng xuất thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng xuất thành công.

        '422':
          description: Invalid input

  /users/forgot-password:
    post:
      tags:
        - users
      summary: Quên mật khẩu
      description: Quên mật khẩu
      operationId: forgot password
      requestBody:
        description: Nhập email cần lấy lại mật khẩu.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordBody'
        required: true
      responses:
        '200':
          description: Lấy mật khẩu thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Kiểm tra hòm thư email để lấy lại mật khẩu..

        '422':
          description: Invalid input

  /users/verify-forgot-password:
    post:
      tags:
        - users
      summary: Xác thực token quên mật khẩu
      description: Xác thực token quên mật khẩu
      operationId: verify forgot_password_token
      requestBody:
        description: Xác thực forgot_password_token lấy từ hộp thư email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyForgotPasswordTokenBody'
        required: true
      responses:
        '200':
          description: Xác thực thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Xác thực thành công.

        '422':
          description: Invalid input

  /users/reset-password:
    post:
      tags:
        - users
      summary: Khôi phục mật khẩu mới
      description: Reset mật khẩu
      operationId: reset password
      requestBody:
        description: Nhập mật khẩu và token lấy lại mật khẩu.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBody'
        required: true
      responses:
        '200':
          description: Khôi phục mật khẩu thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reset mật khẩu thành công.

        '422':
          description: Invalid input

  /users/me:
    get:
      tags:
        - users
      summary: Trang cá nhân
      description: Lấy thông tin tài khoản của mình
      operationId: getMe
      security:
        - BearerAuth: []
      responses:
        default:
          description: Lấy thông tin user thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lấy thông tin tài khoản hiện tại thành công.
                  result:
                    $ref: '#/components/schemas/User'

        '422':
          description: Invalid input
    patch:
      tags:
        - users
      summary: Cập nhập thông tin cá nhân
      description: Cập nhập thông tin cá nhân
      operationId: updateMe
      security:
        - BearerAuth: []
      requestBody:
        description: Nhập email cần lấy lại mật khẩu.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeBody'
        required: true
      responses:
        '200':
          description: Cập nhập thông tin cá nhân thành công.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Cập nhập thông tin cá nhân thành công.
                  result:
                    $ref: '#/components/schemas/User'

        '422':
          description: Invalid input

components:
  schemas:
    LoginBody:
      type: object
      properties:
        email:
          type: string
          example: 'hvudtkt@gmail.com'
        password:
          type: string
          example: '123456'
    SuccessAuthentication:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRmYzFmOTNhYzFhMmU5Y2ZkMDg4NGE2IiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJyb2xlIjowLCJpYXQiOjE2OTYwMDMyMjAsImV4cCI6MTY5NjAwNDEyMH0.sN8nfs94Rz34o-xO4sDaDUSAzKlypEVDnSwKl51_DJY
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRmYzFmOTNhYzFhMmU5Y2ZkMDg4NGE2IiwidG9rZW5fdHlwZSI6MSwidmVyaWZ5IjoxLCJyb2xlIjowLCJpYXQiOjE2OTYwMDMyMjAsImV4cCI6MTcyNzUzOTIyMH0.HyfvSfI6kTXVOHUVWblcSYi-pmLvwG63BHzFFJ_78iM
    RegisterBody:
      type: object
      properties:
        email:
          type: string
          example: 'hvudtkt+2@gmail.com'
        password:
          type: string
          example: '12345678'
        confirm_password:
          type: string
          example: '12345678'
        name:
          type: string
          example: 'Nguyen Hoang Vu'
    VerifyEmailBody:
      type: object
      properties:
        verify_email_token:
          type: string
          example: 'token'
    RefreshTokenBody:
      type: object
      properties:
        refresh_token:
          type: string
          example: 'token'
    LogoutBody:
      type: object
      properties:
        refresh_token:
          type: string
          example: 'token'
    ForgotPasswordBody:
      type: object
      properties:
        email:
          type: string
          example: 'hvudtkt@gmail.com'
    UpdateMeBody:
      type: object
      properties:
        name:
          type: string
          example: 'Nguyen Hoang Vu'
        date_of_birth:
          type: string
          format: ISO8601
          example: '2001-05-01T00:00:00.000Z'
        bio:
          type: string
          example: 'no bio yet'
        location:
          type: string
          example: 'TPHCM'
        website:
          type: string
          example: '2vdev.com'
        username:
          type: string
          example: 'vudeptrai12'
        avatar:
          type: string
          example: https://res.cloudinary.com/dozeyxrdy/image/upload/v1692167930/2VDev-logo_cenlul.png
        cover_photo:
          type: string
          example: https://res.cloudinary.com/dozeyxrdy/image/upload/v1692167930/2VDev-logo_cenlul.png

    VerifyForgotPasswordTokenBody:
      type: object
      properties:
        forgot_password_token:
          type: string
          example: 'token'
    ResetPasswordBody:
      type: object
      properties:
        password:
          type: string
          example: '12345678'
        confirm_password:
          type: string
          example: '12345678'
        forgot_password_token:
          type: string
          example: 'token'
    User:
      type: object
      properties:
        _id:
          type: string
          format: MongoId
          example: '64fc1f93ac1a2e9cfd0884a6'
        name:
          type: string
          example: 'Nguyen Hoang Vu'
        email:
          type: string
          example: 'hvudtkt@gmail.com'
        date_of_birth:
          type: string
          format: ISO8601
          example: '2001-05-01T00:00:00.000Z'
        created_at:
          type: string
          format: ISO8601
          example: '2023-09-09T07:32:35.835Z'
        updated_at:
          type: string
          format: ISO8601
          example: '2023-09-09T07:32:55.311Z'
        verify:
          type: integer
          $ref: '#/components/schemas/UserVerifyStatus'
        role:
          type: integer
          $ref: '#/components/schemas/UserRoleStatus'
        point:
          type: integer
          example: 0
        bio:
          type: string
          example: 'No bio yet1'
        location:
          type: string
          example: 'TP.HCM'
        website:
          type: string
          example: '2vdev.com'
        username:
          type: string
          example: 'user64fc1eef'
        avatar:
          type: string
          format: uri
          example: 'https://res.cloudinary.com/dozeyxrdy/image/upload/v1692167930/2VDev-logo_cenlul.png'
        cover_photo:
          type: string
          format: uri
          example: 'https://res.cloudinary.com/dozeyxrdy/image/upload/v1692167930/2VDev-logo_cenlul.png'
        following:
          type: integer
          example: 1
        followers:
          type: integer
          example: 2
    UserVerifyStatus:
      type: number
      enum: [Unverify, Verified, Banned]
      example: 1
    UserRoleStatus:
      type: number
      enum: [User, Admin]
      example: 0
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
